//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWSaralServices.LAUwdecisionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Master", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Master : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ERRORCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VALUESField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ERRORCODE {
            get {
                return this.ERRORCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ERRORCODEField, value) != true)) {
                    this.ERRORCODEField = value;
                    this.RaisePropertyChanged("ERRORCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VALUES {
            get {
                return this.VALUESField;
            }
            set {
                if ((object.ReferenceEquals(this.VALUESField, value) != true)) {
                    this.VALUESField = value;
                    this.RaisePropertyChanged("VALUES");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LAUwdecisionService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPDEC", ReplyAction="http://tempuri.org/IService/PRPDECResponse")]
        UWSaralServices.LAUwdecisionService.Master PRPDEC(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPDEC", ReplyAction="http://tempuri.org/IService/PRPDECResponse")]
        System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPDECAsync(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPPST", ReplyAction="http://tempuri.org/IService/PRPPSTResponse")]
        UWSaralServices.LAUwdecisionService.Master PRPPST(string CHDRSEL, string REASONCD, string RESNDESC, string ZPOSTPRD, string ZPSTPRCD, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPPST", ReplyAction="http://tempuri.org/IService/PRPPSTResponse")]
        System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPPSTAsync(string CHDRSEL, string REASONCD, string RESNDESC, string ZPOSTPRD, string ZPSTPRCD, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPWDR", ReplyAction="http://tempuri.org/IService/PRPWDRResponse")]
        UWSaralServices.LAUwdecisionService.Master PRPWDR(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPWDR", ReplyAction="http://tempuri.org/IService/PRPWDRResponse")]
        System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPWDRAsync(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPRDW", ReplyAction="http://tempuri.org/IService/PRPRDWResponse")]
        UWSaralServices.LAUwdecisionService.Master PRPRDW(string CHDRSEL, string REASONCD, string RESNDESC, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PRPRDW", ReplyAction="http://tempuri.org/IService/PRPRDWResponse")]
        System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPRDWAsync(string CHDRSEL, string REASONCD, string RESNDESC, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : UWSaralServices.LAUwdecisionService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<UWSaralServices.LAUwdecisionService.IService>, UWSaralServices.LAUwdecisionService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UWSaralServices.LAUwdecisionService.Master PRPDEC(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPDEC(CHDRSEL, REASONCD, RESNDESC, DATIME, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPDECAsync(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPDECAsync(CHDRSEL, REASONCD, RESNDESC, DATIME, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public UWSaralServices.LAUwdecisionService.Master PRPPST(string CHDRSEL, string REASONCD, string RESNDESC, string ZPOSTPRD, string ZPSTPRCD, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPPST(CHDRSEL, REASONCD, RESNDESC, ZPOSTPRD, ZPSTPRCD, DATIME, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPPSTAsync(string CHDRSEL, string REASONCD, string RESNDESC, string ZPOSTPRD, string ZPSTPRCD, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPPSTAsync(CHDRSEL, REASONCD, RESNDESC, ZPOSTPRD, ZPSTPRCD, DATIME, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public UWSaralServices.LAUwdecisionService.Master PRPWDR(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPWDR(CHDRSEL, REASONCD, RESNDESC, DATIME, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPWDRAsync(string CHDRSEL, string REASONCD, string RESNDESC, string DATIME, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPWDRAsync(CHDRSEL, REASONCD, RESNDESC, DATIME, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public UWSaralServices.LAUwdecisionService.Master PRPRDW(string CHDRSEL, string REASONCD, string RESNDESC, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPRDW(CHDRSEL, REASONCD, RESNDESC, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
        
        public System.Threading.Tasks.Task<UWSaralServices.LAUwdecisionService.Master> PRPRDWAsync(string CHDRSEL, string REASONCD, string RESNDESC, string Branch, string UserRole, string UserID, string PartnerID, string ProcessID, string ApplicationNo) {
            return base.Channel.PRPRDWAsync(CHDRSEL, REASONCD, RESNDESC, Branch, UserRole, UserID, PartnerID, ProcessID, ApplicationNo);
        }
    }
}
