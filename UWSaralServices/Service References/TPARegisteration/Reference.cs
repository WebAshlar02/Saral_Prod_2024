//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWSaralServices.TPARegisteration {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProposalDetails", Namespace="http://schemas.datacontract.org/2004/07/HITPACaseRegistration")]
    [System.SerializableAttribute()]
    public partial class ProposalDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentContactDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicantOfficeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CashieredAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CashieringDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HNIFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeVisitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMDEmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterPolicyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberDOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PincodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredDCDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredProviderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposerInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMContactNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMEmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepeatCaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPACostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TalukaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestConductedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentCode {
            get {
                return this.AgentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentCodeField, value) != true)) {
                    this.AgentCodeField = value;
                    this.RaisePropertyChanged("AgentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentContactDetails {
            get {
                return this.AgentContactDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentContactDetailsField, value) != true)) {
                    this.AgentContactDetailsField = value;
                    this.RaisePropertyChanged("AgentContactDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicantOfficeNumber {
            get {
                return this.ApplicantOfficeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicantOfficeNumberField, value) != true)) {
                    this.ApplicantOfficeNumberField = value;
                    this.RaisePropertyChanged("ApplicantOfficeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchName {
            get {
                return this.BranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchNameField, value) != true)) {
                    this.BranchNameField = value;
                    this.RaisePropertyChanged("BranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CashieredAmount {
            get {
                return this.CashieredAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.CashieredAmountField, value) != true)) {
                    this.CashieredAmountField = value;
                    this.RaisePropertyChanged("CashieredAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CashieringDate {
            get {
                return this.CashieringDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CashieringDateField, value) != true)) {
                    this.CashieringDateField = value;
                    this.RaisePropertyChanged("CashieringDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerEmail {
            get {
                return this.CustomerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerEmailField, value) != true)) {
                    this.CustomerEmailField = value;
                    this.RaisePropertyChanged("CustomerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DCName {
            get {
                return this.DCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DCNameField, value) != true)) {
                    this.DCNameField = value;
                    this.RaisePropertyChanged("DCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HNIFlag {
            get {
                return this.HNIFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.HNIFlagField, value) != true)) {
                    this.HNIFlagField = value;
                    this.RaisePropertyChanged("HNIFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeVisitFlag {
            get {
                return this.HomeVisitFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeVisitFlagField, value) != true)) {
                    this.HomeVisitFlagField = value;
                    this.RaisePropertyChanged("HomeVisitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMDEmailID {
            get {
                return this.IMDEmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.IMDEmailIDField, value) != true)) {
                    this.IMDEmailIDField = value;
                    this.RaisePropertyChanged("IMDEmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandMark {
            get {
                return this.LandMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.LandMarkField, value) != true)) {
                    this.LandMarkField = value;
                    this.RaisePropertyChanged("LandMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterPolicyNo {
            get {
                return this.MasterPolicyNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterPolicyNoField, value) != true)) {
                    this.MasterPolicyNoField = value;
                    this.RaisePropertyChanged("MasterPolicyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberDOB {
            get {
                return this.MemberDOBField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberDOBField, value) != true)) {
                    this.MemberDOBField = value;
                    this.RaisePropertyChanged("MemberDOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCName {
            get {
                return this.PCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PCNameField, value) != true)) {
                    this.PCNameField = value;
                    this.RaisePropertyChanged("PCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pincode {
            get {
                return this.PincodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PincodeField, value) != true)) {
                    this.PincodeField = value;
                    this.RaisePropertyChanged("Pincode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanType {
            get {
                return this.PlanTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanTypeField, value) != true)) {
                    this.PlanTypeField = value;
                    this.RaisePropertyChanged("PlanType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredDCDetails {
            get {
                return this.PreferredDCDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredDCDetailsField, value) != true)) {
                    this.PreferredDCDetailsField = value;
                    this.RaisePropertyChanged("PreferredDCDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredDate {
            get {
                return this.PreferredDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredDateField, value) != true)) {
                    this.PreferredDateField = value;
                    this.RaisePropertyChanged("PreferredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredProviderNo {
            get {
                return this.PreferredProviderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredProviderNoField, value) != true)) {
                    this.PreferredProviderNoField = value;
                    this.RaisePropertyChanged("PreferredProviderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredTime {
            get {
                return this.PreferredTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredTimeField, value) != true)) {
                    this.PreferredTimeField = value;
                    this.RaisePropertyChanged("PreferredTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalDate {
            get {
                return this.ProposalDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalDateField, value) != true)) {
                    this.ProposalDateField = value;
                    this.RaisePropertyChanged("ProposalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalStatus {
            get {
                return this.ProposalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalStatusField, value) != true)) {
                    this.ProposalStatusField = value;
                    this.RaisePropertyChanged("ProposalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposerInitial {
            get {
                return this.ProposerInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposerInitialField, value) != true)) {
                    this.ProposerInitialField = value;
                    this.RaisePropertyChanged("ProposerInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposerName {
            get {
                return this.ProposerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposerNameField, value) != true)) {
                    this.ProposerNameField = value;
                    this.RaisePropertyChanged("ProposerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMContactNumber {
            get {
                return this.RMContactNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RMContactNumberField, value) != true)) {
                    this.RMContactNumberField = value;
                    this.RaisePropertyChanged("RMContactNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMEmailId {
            get {
                return this.RMEmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RMEmailIdField, value) != true)) {
                    this.RMEmailIdField = value;
                    this.RaisePropertyChanged("RMEmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepeatCase {
            get {
                return this.RepeatCaseField;
            }
            set {
                if ((object.ReferenceEquals(this.RepeatCaseField, value) != true)) {
                    this.RepeatCaseField = value;
                    this.RaisePropertyChanged("RepeatCase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPACost {
            get {
                return this.TPACostField;
            }
            set {
                if ((object.ReferenceEquals(this.TPACostField, value) != true)) {
                    this.TPACostField = value;
                    this.RaisePropertyChanged("TPACost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Taluka {
            get {
                return this.TalukaField;
            }
            set {
                if ((object.ReferenceEquals(this.TalukaField, value) != true)) {
                    this.TalukaField = value;
                    this.RaisePropertyChanged("Taluka");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestConducted {
            get {
                return this.TestConductedField;
            }
            set {
                if ((object.ReferenceEquals(this.TestConductedField, value) != true)) {
                    this.TestConductedField = value;
                    this.RaisePropertyChanged("TestConducted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseMessage", Namespace="http://schemas.datacontract.org/2004/07/HITPACaseRegistration")]
    [System.SerializableAttribute()]
    public partial class ResponseMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIControlNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HIControlNumber {
            get {
                return this.HIControlNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HIControlNumberField, value) != true)) {
                    this.HIControlNumberField = value;
                    this.RaisePropertyChanged("HIControlNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseMsg {
            get {
                return this.ResponseMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseMsgField, value) != true)) {
                    this.ResponseMsgField = value;
                    this.RaisePropertyChanged("ResponseMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseStatus {
            get {
                return this.ResponseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseStatusField, value) != true)) {
                    this.ResponseStatusField = value;
                    this.RaisePropertyChanged("ResponseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreferenceDetails", Namespace="http://schemas.datacontract.org/2004/07/HITPACaseRegistration")]
    [System.SerializableAttribute()]
    public partial class PreferenceDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredProviderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProposalNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredDate {
            get {
                return this.PreferredDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredDateField, value) != true)) {
                    this.PreferredDateField = value;
                    this.RaisePropertyChanged("PreferredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredProviderNo {
            get {
                return this.PreferredProviderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredProviderNoField, value) != true)) {
                    this.PreferredProviderNoField = value;
                    this.RaisePropertyChanged("PreferredProviderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredTime {
            get {
                return this.PreferredTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredTimeField, value) != true)) {
                    this.PreferredTimeField = value;
                    this.RaisePropertyChanged("PreferredTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProposalNo {
            get {
                return this.ProposalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalNoField, value) != true)) {
                    this.ProposalNoField = value;
                    this.RaisePropertyChanged("ProposalNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TPARegisteration.IHITPA_PIMS")]
    public interface IHITPA_PIMS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/RegisterNewCase", ReplyAction="http://tempuri.org/IHITPA_PIMS/RegisterNewCaseResponse")]
        UWSaralServices.TPARegisteration.ResponseMessage RegisterNewCase(string UserName, string Password, UWSaralServices.TPARegisteration.ProposalDetails proposalDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/RegisterNewCase", ReplyAction="http://tempuri.org/IHITPA_PIMS/RegisterNewCaseResponse")]
        System.Threading.Tasks.Task<UWSaralServices.TPARegisteration.ResponseMessage> RegisterNewCaseAsync(string UserName, string Password, UWSaralServices.TPARegisteration.ProposalDetails proposalDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/RegisterCase", ReplyAction="http://tempuri.org/IHITPA_PIMS/RegisterCaseResponse")]
        string RegisterCase(
                    string UserName, 
                    string Password, 
                    string ProposalDate, 
                    string ProposalNo, 
                    string MasterPolicyNo, 
                    string ProposerInitial, 
                    string ProposerName, 
                    string Gender, 
                    string TestConducted, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string Pincode, 
                    string LandMark, 
                    string Telephone, 
                    string MobileNo, 
                    string HNIFlag, 
                    string HomeVisitFlag, 
                    string AgentCode, 
                    string AgentName, 
                    string AgentContactDetails, 
                    string Channel, 
                    string BranchName, 
                    string PlanType, 
                    string ProductName, 
                    string MemberDOB, 
                    string CustomerEmail, 
                    string Remark, 
                    string PreferredDate, 
                    string PreferredTime, 
                    string PreferredProviderNo, 
                    string Age, 
                    string RMContactNumber, 
                    string RMEmailId, 
                    string IMDEmailId, 
                    string PaymentType, 
                    string Status, 
                    string ApplicantOfficeNumber, 
                    string DCName, 
                    string ProposalStatus, 
                    string CashieringDate, 
                    string CashieredAmount, 
                    string PCName, 
                    string Region, 
                    string RepeatCase, 
                    string TPACost, 
                    string PreferredDCDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/RegisterCase", ReplyAction="http://tempuri.org/IHITPA_PIMS/RegisterCaseResponse")]
        System.Threading.Tasks.Task<string> RegisterCaseAsync(
                    string UserName, 
                    string Password, 
                    string ProposalDate, 
                    string ProposalNo, 
                    string MasterPolicyNo, 
                    string ProposerInitial, 
                    string ProposerName, 
                    string Gender, 
                    string TestConducted, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string Pincode, 
                    string LandMark, 
                    string Telephone, 
                    string MobileNo, 
                    string HNIFlag, 
                    string HomeVisitFlag, 
                    string AgentCode, 
                    string AgentName, 
                    string AgentContactDetails, 
                    string Channel, 
                    string BranchName, 
                    string PlanType, 
                    string ProductName, 
                    string MemberDOB, 
                    string CustomerEmail, 
                    string Remark, 
                    string PreferredDate, 
                    string PreferredTime, 
                    string PreferredProviderNo, 
                    string Age, 
                    string RMContactNumber, 
                    string RMEmailId, 
                    string IMDEmailId, 
                    string PaymentType, 
                    string Status, 
                    string ApplicantOfficeNumber, 
                    string DCName, 
                    string ProposalStatus, 
                    string CashieringDate, 
                    string CashieredAmount, 
                    string PCName, 
                    string Region, 
                    string RepeatCase, 
                    string TPACost, 
                    string PreferredDCDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/RegisterCase_TATA_AIA", ReplyAction="http://tempuri.org/IHITPA_PIMS/RegisterCase_TATA_AIAResponse")]
        string RegisterCase_TATA_AIA(
                    string UserName, 
                    string Password, 
                    string Channel, 
                    string BranchName, 
                    string ClientName, 
                    string ApplicationNo, 
                    string Gender, 
                    string PhoneNo, 
                    string MobileNo, 
                    string HNIFlag, 
                    string DOB, 
                    string ClientEmail, 
                    string Address, 
                    string City, 
                    string State, 
                    string PinCode, 
                    string TestDetails, 
                    string ProviderNumber, 
                    string ProviderName, 
                    string FirstAppointmentDate, 
                    string FirstAppointmentTime, 
                    string SecondAppointmentDate, 
                    string SecondAppointmentTime, 
                    string VisitType, 
                    string RMName, 
                    string RMContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/RegisterCase_TATA_AIA", ReplyAction="http://tempuri.org/IHITPA_PIMS/RegisterCase_TATA_AIAResponse")]
        System.Threading.Tasks.Task<string> RegisterCase_TATA_AIAAsync(
                    string UserName, 
                    string Password, 
                    string Channel, 
                    string BranchName, 
                    string ClientName, 
                    string ApplicationNo, 
                    string Gender, 
                    string PhoneNo, 
                    string MobileNo, 
                    string HNIFlag, 
                    string DOB, 
                    string ClientEmail, 
                    string Address, 
                    string City, 
                    string State, 
                    string PinCode, 
                    string TestDetails, 
                    string ProviderNumber, 
                    string ProviderName, 
                    string FirstAppointmentDate, 
                    string FirstAppointmentTime, 
                    string SecondAppointmentDate, 
                    string SecondAppointmentTime, 
                    string VisitType, 
                    string RMName, 
                    string RMContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/GetDCList", ReplyAction="http://tempuri.org/IHITPA_PIMS/GetDCListResponse")]
        string GetDCList(string UserName, string Password, string City, string State, string Area, string PinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/GetDCList", ReplyAction="http://tempuri.org/IHITPA_PIMS/GetDCListResponse")]
        System.Threading.Tasks.Task<string> GetDCListAsync(string UserName, string Password, string City, string State, string Area, string PinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/UpdatePreference", ReplyAction="http://tempuri.org/IHITPA_PIMS/UpdatePreferenceResponse")]
        UWSaralServices.TPARegisteration.ResponseMessage UpdatePreference(string UserName, string Password, UWSaralServices.TPARegisteration.PreferenceDetails preferenceDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/UpdatePreference", ReplyAction="http://tempuri.org/IHITPA_PIMS/UpdatePreferenceResponse")]
        System.Threading.Tasks.Task<UWSaralServices.TPARegisteration.ResponseMessage> UpdatePreferenceAsync(string UserName, string Password, UWSaralServices.TPARegisteration.PreferenceDetails preferenceDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/StatusUpdateFromBajaj", ReplyAction="http://tempuri.org/IHITPA_PIMS/StatusUpdateFromBajajResponse")]
        string StatusUpdateFromBajaj(string UserName, string Password, string AppointmentCode, string MasterPolicyNo, string StatusFromBajaj, string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHITPA_PIMS/StatusUpdateFromBajaj", ReplyAction="http://tempuri.org/IHITPA_PIMS/StatusUpdateFromBajajResponse")]
        System.Threading.Tasks.Task<string> StatusUpdateFromBajajAsync(string UserName, string Password, string AppointmentCode, string MasterPolicyNo, string StatusFromBajaj, string Remarks);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHITPA_PIMSChannel : UWSaralServices.TPARegisteration.IHITPA_PIMS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HITPA_PIMSClient : System.ServiceModel.ClientBase<UWSaralServices.TPARegisteration.IHITPA_PIMS>, UWSaralServices.TPARegisteration.IHITPA_PIMS {
        
        public HITPA_PIMSClient() {
        }
        
        public HITPA_PIMSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HITPA_PIMSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HITPA_PIMSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HITPA_PIMSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UWSaralServices.TPARegisteration.ResponseMessage RegisterNewCase(string UserName, string Password, UWSaralServices.TPARegisteration.ProposalDetails proposalDetails) {
            return base.Channel.RegisterNewCase(UserName, Password, proposalDetails);
        }
        
        public System.Threading.Tasks.Task<UWSaralServices.TPARegisteration.ResponseMessage> RegisterNewCaseAsync(string UserName, string Password, UWSaralServices.TPARegisteration.ProposalDetails proposalDetails) {
            return base.Channel.RegisterNewCaseAsync(UserName, Password, proposalDetails);
        }
        
        public string RegisterCase(
                    string UserName, 
                    string Password, 
                    string ProposalDate, 
                    string ProposalNo, 
                    string MasterPolicyNo, 
                    string ProposerInitial, 
                    string ProposerName, 
                    string Gender, 
                    string TestConducted, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string Pincode, 
                    string LandMark, 
                    string Telephone, 
                    string MobileNo, 
                    string HNIFlag, 
                    string HomeVisitFlag, 
                    string AgentCode, 
                    string AgentName, 
                    string AgentContactDetails, 
                    string Channel, 
                    string BranchName, 
                    string PlanType, 
                    string ProductName, 
                    string MemberDOB, 
                    string CustomerEmail, 
                    string Remark, 
                    string PreferredDate, 
                    string PreferredTime, 
                    string PreferredProviderNo, 
                    string Age, 
                    string RMContactNumber, 
                    string RMEmailId, 
                    string IMDEmailId, 
                    string PaymentType, 
                    string Status, 
                    string ApplicantOfficeNumber, 
                    string DCName, 
                    string ProposalStatus, 
                    string CashieringDate, 
                    string CashieredAmount, 
                    string PCName, 
                    string Region, 
                    string RepeatCase, 
                    string TPACost, 
                    string PreferredDCDetails) {
            return base.Channel.RegisterCase(UserName, Password, ProposalDate, ProposalNo, MasterPolicyNo, ProposerInitial, ProposerName, Gender, TestConducted, Address1, Address2, City, State, District, Taluka, Pincode, LandMark, Telephone, MobileNo, HNIFlag, HomeVisitFlag, AgentCode, AgentName, AgentContactDetails, Channel, BranchName, PlanType, ProductName, MemberDOB, CustomerEmail, Remark, PreferredDate, PreferredTime, PreferredProviderNo, Age, RMContactNumber, RMEmailId, IMDEmailId, PaymentType, Status, ApplicantOfficeNumber, DCName, ProposalStatus, CashieringDate, CashieredAmount, PCName, Region, RepeatCase, TPACost, PreferredDCDetails);
        }
        
        public System.Threading.Tasks.Task<string> RegisterCaseAsync(
                    string UserName, 
                    string Password, 
                    string ProposalDate, 
                    string ProposalNo, 
                    string MasterPolicyNo, 
                    string ProposerInitial, 
                    string ProposerName, 
                    string Gender, 
                    string TestConducted, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string Pincode, 
                    string LandMark, 
                    string Telephone, 
                    string MobileNo, 
                    string HNIFlag, 
                    string HomeVisitFlag, 
                    string AgentCode, 
                    string AgentName, 
                    string AgentContactDetails, 
                    string Channel, 
                    string BranchName, 
                    string PlanType, 
                    string ProductName, 
                    string MemberDOB, 
                    string CustomerEmail, 
                    string Remark, 
                    string PreferredDate, 
                    string PreferredTime, 
                    string PreferredProviderNo, 
                    string Age, 
                    string RMContactNumber, 
                    string RMEmailId, 
                    string IMDEmailId, 
                    string PaymentType, 
                    string Status, 
                    string ApplicantOfficeNumber, 
                    string DCName, 
                    string ProposalStatus, 
                    string CashieringDate, 
                    string CashieredAmount, 
                    string PCName, 
                    string Region, 
                    string RepeatCase, 
                    string TPACost, 
                    string PreferredDCDetails) {
            return base.Channel.RegisterCaseAsync(UserName, Password, ProposalDate, ProposalNo, MasterPolicyNo, ProposerInitial, ProposerName, Gender, TestConducted, Address1, Address2, City, State, District, Taluka, Pincode, LandMark, Telephone, MobileNo, HNIFlag, HomeVisitFlag, AgentCode, AgentName, AgentContactDetails, Channel, BranchName, PlanType, ProductName, MemberDOB, CustomerEmail, Remark, PreferredDate, PreferredTime, PreferredProviderNo, Age, RMContactNumber, RMEmailId, IMDEmailId, PaymentType, Status, ApplicantOfficeNumber, DCName, ProposalStatus, CashieringDate, CashieredAmount, PCName, Region, RepeatCase, TPACost, PreferredDCDetails);
        }
        
        public string RegisterCase_TATA_AIA(
                    string UserName, 
                    string Password, 
                    string Channel, 
                    string BranchName, 
                    string ClientName, 
                    string ApplicationNo, 
                    string Gender, 
                    string PhoneNo, 
                    string MobileNo, 
                    string HNIFlag, 
                    string DOB, 
                    string ClientEmail, 
                    string Address, 
                    string City, 
                    string State, 
                    string PinCode, 
                    string TestDetails, 
                    string ProviderNumber, 
                    string ProviderName, 
                    string FirstAppointmentDate, 
                    string FirstAppointmentTime, 
                    string SecondAppointmentDate, 
                    string SecondAppointmentTime, 
                    string VisitType, 
                    string RMName, 
                    string RMContact) {
            return base.Channel.RegisterCase_TATA_AIA(UserName, Password, Channel, BranchName, ClientName, ApplicationNo, Gender, PhoneNo, MobileNo, HNIFlag, DOB, ClientEmail, Address, City, State, PinCode, TestDetails, ProviderNumber, ProviderName, FirstAppointmentDate, FirstAppointmentTime, SecondAppointmentDate, SecondAppointmentTime, VisitType, RMName, RMContact);
        }
        
        public System.Threading.Tasks.Task<string> RegisterCase_TATA_AIAAsync(
                    string UserName, 
                    string Password, 
                    string Channel, 
                    string BranchName, 
                    string ClientName, 
                    string ApplicationNo, 
                    string Gender, 
                    string PhoneNo, 
                    string MobileNo, 
                    string HNIFlag, 
                    string DOB, 
                    string ClientEmail, 
                    string Address, 
                    string City, 
                    string State, 
                    string PinCode, 
                    string TestDetails, 
                    string ProviderNumber, 
                    string ProviderName, 
                    string FirstAppointmentDate, 
                    string FirstAppointmentTime, 
                    string SecondAppointmentDate, 
                    string SecondAppointmentTime, 
                    string VisitType, 
                    string RMName, 
                    string RMContact) {
            return base.Channel.RegisterCase_TATA_AIAAsync(UserName, Password, Channel, BranchName, ClientName, ApplicationNo, Gender, PhoneNo, MobileNo, HNIFlag, DOB, ClientEmail, Address, City, State, PinCode, TestDetails, ProviderNumber, ProviderName, FirstAppointmentDate, FirstAppointmentTime, SecondAppointmentDate, SecondAppointmentTime, VisitType, RMName, RMContact);
        }
        
        public string GetDCList(string UserName, string Password, string City, string State, string Area, string PinCode) {
            return base.Channel.GetDCList(UserName, Password, City, State, Area, PinCode);
        }
        
        public System.Threading.Tasks.Task<string> GetDCListAsync(string UserName, string Password, string City, string State, string Area, string PinCode) {
            return base.Channel.GetDCListAsync(UserName, Password, City, State, Area, PinCode);
        }
        
        public UWSaralServices.TPARegisteration.ResponseMessage UpdatePreference(string UserName, string Password, UWSaralServices.TPARegisteration.PreferenceDetails preferenceDetails) {
            return base.Channel.UpdatePreference(UserName, Password, preferenceDetails);
        }
        
        public System.Threading.Tasks.Task<UWSaralServices.TPARegisteration.ResponseMessage> UpdatePreferenceAsync(string UserName, string Password, UWSaralServices.TPARegisteration.PreferenceDetails preferenceDetails) {
            return base.Channel.UpdatePreferenceAsync(UserName, Password, preferenceDetails);
        }
        
        public string StatusUpdateFromBajaj(string UserName, string Password, string AppointmentCode, string MasterPolicyNo, string StatusFromBajaj, string Remarks) {
            return base.Channel.StatusUpdateFromBajaj(UserName, Password, AppointmentCode, MasterPolicyNo, StatusFromBajaj, Remarks);
        }
        
        public System.Threading.Tasks.Task<string> StatusUpdateFromBajajAsync(string UserName, string Password, string AppointmentCode, string MasterPolicyNo, string StatusFromBajaj, string Remarks) {
            return base.Channel.StatusUpdateFromBajajAsync(UserName, Password, AppointmentCode, MasterPolicyNo, StatusFromBajaj, Remarks);
        }
    }
}
